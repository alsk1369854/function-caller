{"version":3,"file":"IFunctionCaller.js","names":[],"sources":["../../src/FunctionCaller/IFunctionCaller.ts"],"sourcesContent":["export default interface IFunctionCaller {\n    readonly functionMap: Map<string, Function>,\n    set: (key: string, func: Function) => boolean,\n    call: (key: string, ...args: any[]) => any,\n    asyncCall: (key: string, ...args: any[]) => Promise<any>,\n    remove: (key: string) => void,\n    clear: () => void,\n    hasKey: (key: string) => boolean,\n    getKeys: () => IterableIterator<string>,\n    getEntries: () => IterableIterator<[string, Function]>,\n    getFunction: (key: string) => Function | undefined,\n    getSize: () => number,\n}"],"mappings":""}